# This is a basic workflow to help you get started with Actions
name: CI/CD Pipeline

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

# All the environment variables are defined here
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "Build"
  build:
    runs-on: ubuntu-latest
    outputs:
      build_number: ${{ steps.build_number.outputs.build_number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setting Github Short SHA & TIMESTAMP & BRANCH_NAME
        run: |
          echo "SHORT_SHA=`git rev-parse --short HEAD`" >> $GITHUB_ENV
          echo "TIMESTAMP=`date -u +%Y%m%d%H%M%S`" >> $GITHUB_ENV
          echo "BRANCH_NAME=$(echo $GITHUB_REF | cut -d'/' -f 3)" >> $GITHUB_ENV

      - name: Generate build number
        id: build_number
        uses: einaregilsson/build-number@v3
        with:
          token: ${{secrets.github_token}}

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Docker Images
        env:
          JPETSTOREWEB: ${{env.DOCKER_USERNAME}}/jpetstoreweb
          JPETSTOREDB: ${{env.DOCKER_USERNAME}}/jpetstoredb
          BUILD_TAG: ${{env.BUILD_NUMBER}}-${{env.BRANCH_NAME}}-${{env.SHORT_SHA}}-${{env.TIMESTAMP}}
        run: |
          echo "Building docker images..."
          docker build -t ${{env.JPETSTOREWEB}}:${{env.BUILD_TAG}} -t ${{env.JPETSTOREWEB}}:latest ./jpetstore
          docker build -t ${{env.JPETSTOREDB}}:${{env.BUILD_TAG}} -t ${{env.JPETSTOREDB}}:latest .
          docker push ${{env.JPETSTOREWEB}}:${{env.BUILD_TAG}}
          docker push ${{env.JPETSTOREWEB}}:latest
          docker push ${{env.JPETSTOREDB}}:${{env.BUILD_TAG}}
          docker push ${{env.JPETSTOREDB}}:latest
  test:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Testing
        run: echo ${{needs.build.outputs.build_number}}
